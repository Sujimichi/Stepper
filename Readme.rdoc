= Stepper
Locate step definitions from cucumber features, find which steps are not being used and see which features use a given step definition, without waiting to run your test suite.

==Use Cases
======Example 1
You are looking at some cucumber features and you come to step which you want to check.  ie:
    And I have put "some stuff" into "this field"

You have 100's of step definitions over 10's of files and many are similar.  How do you quickly find where that step definition is?
You could run that test again with the `--format usage` option but a) you have to wait for that test to run and b) you will get a load of un-needed information about all the other steps.

    step --find "And I have put \"some stuff\" into \"this field\""
Which will return:
    found:	Given /^I have put "([^"]*)" into "([^"]*)"$/ do |data, field|
    line:	42 in features/my_nondescript_steps.rb


You can then change --find to --useof and see what other features use this same step.
    step --useof "And I have put \"some stuff\" into \"this field\""



======Example 2
You want to see which steps are not being used.
You could use the `--format usage` option in cucumber but your test suite takes over 30 minutes to run and you don't want to wait.

    step --notused


Stepper was written in haste to solve a problem.  It could do with improvment!  Feel free to use and improve.
It is also my first attempt at writing a gem!

It makes a couple assumptions
1. It assumes that it will be run from the rails root dir
2. It assumes that your features and step definitions are in rails_root/features

==install
NB: not yet release to rubygems.  Need to check a few things first, ie is this actualy worthy of being released!
Then it will just be good ol'

    gem install stepper


==Full Usage

All commands are run in the Command line from within your rails directory;

===Find a step definintion given a line from a feature

Find a simple step by
    step --find "Given I am logged in"

Find a step that uses args
    step --find "Given I am logged in as \"sujimichi\" with the password \"password\""
Note the step must be wrapped in <code>""</code> and any <code>"</code> in the step need to be escaped;<code>\"</code>

Find a step when referenced with And
    step --find "And I am logged in as \"sujimichi\" with the password \"password\""

--find will return the matched step and which line of which file;
    found:  Given /^I am logged in as "([^"]*)" with the password "([^"]*)"$/ do |username, password|
    line:   50 in login_steps.rb



===See which lines in features use a given step

Given a step as used by a line in a feature, see which line of which file the step is defined on and which lines of the various features use it.

    step --useof "Given I am logged in as \"sujimichi\""

    Stepper Results for Specific Step:

    File: login_steps.rb
    42  Given /^I am logged in as "([^"]*)"$/ do |user_name|	Used in 8 features
        features/login.feature:
        lines: 10,18,30,42
        features/users.feature:
        lines: 9,14,25,27


You can get the same output by giving the file name and linenumber of a step.

    step --useof login_steps 42


===Find Un-used Steps
To get a list of the steps which are no longer being used by your features

    step --notused

    File: features/state_steps.rb
    13	When /^I fill in the table data with "([^"]*)"$/ do |arg1|
    76	Then /^"([^"]*)" should have the table data "([^"]*)"$/ do |e, arg1|
    81	Then /^then table data field should show "([^"]*)"$/ do |arg1|

    File: features/common_steps.rb
    99	Given /^the user "([^"]*)"$/ do |arg1|
    118	Given /^Im logged in as "([^"]*)" with no user data$/ do |user_name|

===Overview
To get an output that shows for each step, where it is and which features use it (or if its not used), just call;

    step


==License

Stepper is released under the MIT license.
